clc;
clear all;
x = input('Enter elements of input array x[n] inside a square bracket:')
len_x = length(x);
h = input('Enter elements of impulse response h[n] inside a square bracket:')
M = length(h);
N = input('Enter the value of N:')
L=N-M+1;
m=M+1;
for a=1:L-1
h(m)=zeros(1)
m=m+1;
end
temp=length(h)-(M-1);
r=mod(len_x,temp);
q=(len_x-r)/temp;
y=0;
i=1;
for u=1:(q+r)
y=y+temp;
for v=1:temp
if(i<=len_x&&i<=y)
seg(u,v) = x(i);
elseif(i>len_x)
seg(u,v) = zeros(1);
end
i=i+1;
end
end
for u=1:(q+r)
for v=temp+1:temp+(M-1)
seg(u,v)=zeros(1);
end
end
disp('SEGMENTS:');
disp(seg);
for u=1:(q+r)
result(u,:) = cconv(seg(u,:),h,length(h));
end
disp('CONVOLUTION RESULT:');
disp(result);
b=1;
for f=1:(q+r)
if(f==1)
for t=1:temp
final(b)=result(f,t);
b=b+1;
t=t+1;
end
for u=1:(M-1)
final(b)=result(f,t)+result(f+1,u);
t=t+1;
b=b+1;
end
elseif(f>1 && f<(q+r))
if(M<=(length(h)-(M-1)))
for t=M:(length(h)-(M-1))
final(b)=result(f,t);
b=b+1;
t=t+1;
end
else
t=M;
end
for u=1:(M-1)
final(b)=result(f,t)+result(f+1,u);
t=t+1;
b=b+1;
end
elseif(f==(q+r))
if(M<=(length(h)-(M-1)))
for t=temp:(length(h))
final(b)=result(f,t);
t=t+1;
b=b+1;
end
else
for t=(temp+1):(length(h))
final(b)=result(f,t);
t=t+1;
b=b+1;
end
end
end
end
disp('FINAL RESULT:OVERLAP ADD');
disp(final);
